tuneLength = 5,
trControl = train_control)
C45Fit
C45Fit$finalModel
predictions = predict(C45Fit, newdata = dtest)
confusionMatrix(predictions, dtest$isVPN)
lab3_noVPN = read.csv("slackPcapFixGapLab1_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab1_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_noVPN$isVPN <- as.factor(lab3_noVPN$isVPN)
lab3_noVPN = read.csv("slackPcapFixGapLab1_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab1_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_1111 <- lab3_1111 %>% select(where(~ n_distinct(.) > 1))
lab3_noVPN = read.csv("slackPcapFixGapLab1_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab1_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_1111 <- lab3_1111 %>% select(where(~ n_distinct(.) > 1))
lab3 <- rbind(lab1_1111,lab1_noVPN)
# Predicate
predictions = predict(C45Fit, newdata = lab3)
confusionMatrix(predictions, lab3$isVPN)
predictions = predict(C45Fit, newdata = lab3)
confusionMatrix(predictions, lab3$isVPN)
lab3_noVPN = read.csv("slackPcapFixGapLab1_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab1_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_1111 <- lab3_1111 %>% select(where(~ n_distinct(.) > 1))
lab3 <- rbind(lab1_1111,lab1_noVPN)
predictions = predict(C45Fit, newdata = lab3)
confusionMatrix(predictions, lab3$isVPN)
predictions = predict(C45Fit, newdata = lab3)
predictions
confusionMatrix(predictions, lab3$isVPN)
lab3_noVPN = read.csv("slackPcapFixGapLab1_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab1_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
rm(list = ls())
ls()
library(caret)
library(RWeka)
library(dplyr)
lab1_noVPN = read.csv("slackPcapFixGapLab1_flows.csv")
lab1_1111 = read.csv("slackPcapFixGapLab1_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg",
lab1_noVPN <- lab1_noVPN[, !(names(lab1_noVPN) %in% drops)]
lab1_1111 <- lab1_1111[, !(names(lab1_1111) %in% drops)]
sum(is.na(lab1_noVPN))
sum(is.na(lab1_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab1_noVPN$isVPN <- 0
lab1_1111$isVPN <- 1
# Show summary
lab1_noVPN = data.frame(lab1_noVPN)
lab1_1111 = data.frame(lab1_1111)
# Find length of the no_vpn table
n_noVPN = length(lab1_noVPN$flowInd)
n_noVPN
# Find length of the vpn table
n_VPN = length(lab1_1111$flowInd)
n_VPN
if (n_noVPN > n_VPN) {
nTrain = n_VPN*0.7
} else {
nTrain = n_noVPN*0.7
}
# Define Training set & Testing set
prop = nTrain/(nrow(lab1_noVPN))
prop
set.seed(123)
trnrows_noVPN  <- sample(nrow(lab1_noVPN),nrow(lab1_noVPN)*prop)
dtrain_noVPN <- lab1_noVPN[ trnrows_noVPN,]
dtest_noVPN  <- lab1_noVPN[-trnrows_noVPN,]
trnrows_1111  <- sample(nrow(lab1_1111),nrow(lab1_1111)*0.7)
dtrain_1111 <- lab1_1111[ trnrows_1111,]
dtest_1111  <- lab1_1111[-trnrows_1111,]
dtrain <- rbind(dtrain_noVPN,dtrain_1111)
dtest <- rbind(dtest_1111,dtest_noVPN)
# Remove all columns with only 1 unique value
dtrain <- dtrain %>% select(where(~ n_distinct(.) > 1))
dtrain$isVPN <- as.factor(dtrain$isVPN)
dtest <- dtest %>% select(where(~ n_distinct(.) > 1))
dtest$isVPN <- as.factor(dtest$isVPN)
#dtest <- dtest[, !(names(dtest) %in% c("tcpSeqFaultCnt"))]
nrow(dtest)
nrow(dtrain)
ncol(dtrain)
train_control<- trainControl(method="cv", number=10)
C45Fit <- train(isVPN ~., method="J48", data=dtrain,
tuneLength = 5,
trControl = train_control)
C45Fit
C45Fit$finalModel
predictions = predict(C45Fit, newdata = dtest)
confusionMatrix(predictions, dtest$isVPN)
lab3_noVPN = read.csv("slackPcapFixGapLab1_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab1_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_1111 <- lab3_1111 %>% select(where(~ n_distinct(.) > 1))
lab3 <- rbind(lab1_1111,lab1_noVPN)
predictions = predict(C45Fit, newdata = lab3)
confusionMatrix(predictions, lab3$isVPN)
predictions = predict(C45Fit, newdata = lab3)
confusionMatrix(predictions, as.factor(lab3$isVPN))
lab3_noVPN = read.csv("slackPcapFixGapLab3_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab3_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_1111 <- lab3_1111 %>% select(where(~ n_distinct(.) > 1))
lab3 <- rbind(lab1_1111,lab1_noVPN)
predictions = predict(C45Fit, newdata = lab3)
confusionMatrix(predictions, as.factor(lab3$isVPN))
lab3_noVPN = read.csv("slackPcapFixGapLab3_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab3_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_1111 <- lab3_1111 %>% select(where(~ n_distinct(.) > 1))
lab3 <- rbind(lab1_1111,lab1_noVPN)
nrow(lab3)
lab3_noVPN = read.csv("slackPcapFixGapLab3_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab3_1111_flows.csv")
nrow(lab3_noVPN)
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_1111 <- lab3_1111 %>% select(where(~ n_distinct(.) > 1))
lab3 <- rbind(lab1_1111,lab1_noVPN)
nrow(lab3)
lab3_noVPN = read.csv("slackPcapFixGapLab3_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab3_1111_flows.csv")
nrow(lab3_noVPN)
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_1111 <- lab3_1111 %>% select(where(~ n_distinct(.) > 1))
lab3 <- rbind(lab3_1111,lab3_noVPN)
lab3_noVPN = read.csv("slackPcapFixGapLab3_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab3_1111_flows.csv")
nrow(lab3_noVPN)
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
# Remove all columns with only 1 unique value
lab3_noVPN <- lab3_noVPN %>% select(where(~ n_distinct(.) > 1))
lab3_1111 <- lab3_1111 %>% select(where(~ n_distinct(.) > 1))
ncol(lab3_1111)
ncol(lab1_noVPN)
lab3 <- rbind(lab3_1111,lab3_noVPN)
lab3_noVPN = read.csv("slackPcapFixGapLab3_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab3_1111_flows.csv")
nrow(lab3_noVPN)
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
lab3 <- rbind(lab3_1111,lab3_noVPN)
# Remove all columns with only 1 unique value
lab3 <- lab3 %>% select(where(~ n_distinct(.) > 1))
nrow(lab3)
lab3_noVPN = read.csv("slackPcapFixGapLab3_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab3_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
lab3 <- rbind(lab3_1111,lab3_noVPN)
# Remove all columns with only 1 unique value
lab3 <- lab3 %>% select(where(~ n_distinct(.) > 1))
nrow(lab3)
ncol(lab3)
predictions = predict(C45Fit, newdata = lab3)
rm(list = ls())
ls()
library(caret)
library(RWeka)
library(dplyr)
lab1_noVPN = read.csv("slackPcapFixGapLab1_flows.csv")
lab1_1111 = read.csv("slackPcapFixGapLab1_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg",
lab1_noVPN <- lab1_noVPN[, !(names(lab1_noVPN) %in% drops)]
lab1_1111 <- lab1_1111[, !(names(lab1_1111) %in% drops)]
sum(is.na(lab1_noVPN))
sum(is.na(lab1_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab1_noVPN$isVPN <- 0
lab1_1111$isVPN <- 1
# Show summary
lab1_noVPN = data.frame(lab1_noVPN)
lab1_1111 = data.frame(lab1_1111)
# Find length of the no_vpn table
n_noVPN = length(lab1_noVPN$flowInd)
n_noVPN
# Find length of the vpn table
n_VPN = length(lab1_1111$flowInd)
n_VPN
if (n_noVPN > n_VPN) {
nTrain = n_VPN*0.7
} else {
nTrain = n_noVPN*0.7
}
# Define Training set & Testing set
prop = nTrain/(nrow(lab1_noVPN))
prop
set.seed(123)
trnrows_noVPN  <- sample(nrow(lab1_noVPN),nrow(lab1_noVPN)*prop)
dtrain_noVPN <- lab1_noVPN[ trnrows_noVPN,]
dtest_noVPN  <- lab1_noVPN[-trnrows_noVPN,]
trnrows_1111  <- sample(nrow(lab1_1111),nrow(lab1_1111)*0.7)
dtrain_1111 <- lab1_1111[ trnrows_1111,]
dtest_1111  <- lab1_1111[-trnrows_1111,]
dtrain <- rbind(dtrain_noVPN,dtrain_1111)
dtest <- rbind(dtest_1111,dtest_noVPN)
# Remove all columns with only 1 unique value
dtrain <- dtrain %>% select(where(~ n_distinct(.) > 1))
dtrain$isVPN <- as.factor(dtrain$isVPN)
dtest <- dtest %>% select(where(~ n_distinct(.) > 1))
dtest$isVPN <- as.factor(dtest$isVPN)
#dtest <- dtest[, !(names(dtest) %in% c("tcpSeqFaultCnt"))]
nrow(dtest)
nrow(dtrain)
ncol(dtrain)
train_control<- trainControl(method="cv", number=10)
C45Fit <- train(isVPN ~., method="J48", data=dtrain,
tuneLength = 5,
trControl = train_control)
C45Fit
C45Fit$finalModel
predictions = predict(C45Fit, newdata = dtest)
confusionMatrix(predictions, dtest$isVPN)
lab3_noVPN = read.csv("slackPcapFixGapLab3_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab3_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
lab3 <- rbind(lab3_1111,lab3_noVPN)
# Remove all columns with only 1 unique value
lab3 <- lab3 %>% select(where(~ n_distinct(.) > 1))
nrow(lab3)
ncol(lab3)
predictions = predict(C45Fit, newdata = lab3)
lab1_noVPN = read.csv("slackPcapFixGapLab1_flows.csv")
lab1_1111 = read.csv("slackPcapFixGapLab1_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID",
"hdrDesc")
#"srcIPOrg", "dstIPOrg",
lab1_noVPN <- lab1_noVPN[, !(names(lab1_noVPN) %in% drops)]
lab1_1111 <- lab1_1111[, !(names(lab1_1111) %in% drops)]
sum(is.na(lab1_noVPN))
sum(is.na(lab1_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab1_noVPN$isVPN <- 0
lab1_1111$isVPN <- 1
# Show summary
lab1_noVPN = data.frame(lab1_noVPN)
lab1_1111 = data.frame(lab1_1111)
# Find length of the no_vpn table
n_noVPN = length(lab1_noVPN$flowInd)
n_noVPN
# Find length of the vpn table
n_VPN = length(lab1_1111$flowInd)
n_VPN
if (n_noVPN > n_VPN) {
nTrain = n_VPN*0.7
} else {
nTrain = n_noVPN*0.7
}
# Define Training set & Testing set
prop = nTrain/(nrow(lab1_noVPN))
prop
set.seed(123)
trnrows_noVPN  <- sample(nrow(lab1_noVPN),nrow(lab1_noVPN)*prop)
dtrain_noVPN <- lab1_noVPN[ trnrows_noVPN,]
dtest_noVPN  <- lab1_noVPN[-trnrows_noVPN,]
trnrows_1111  <- sample(nrow(lab1_1111),nrow(lab1_1111)*0.7)
dtrain_1111 <- lab1_1111[ trnrows_1111,]
dtest_1111  <- lab1_1111[-trnrows_1111,]
dtrain <- rbind(dtrain_noVPN,dtrain_1111)
dtest <- rbind(dtest_1111,dtest_noVPN)
# Remove all columns with only 1 unique value
dtrain <- dtrain %>% select(where(~ n_distinct(.) > 1))
dtrain$isVPN <- as.factor(dtrain$isVPN)
dtest <- dtest %>% select(where(~ n_distinct(.) > 1))
dtest$isVPN <- as.factor(dtest$isVPN)
#dtest <- dtest[, !(names(dtest) %in% c("tcpSeqFaultCnt"))]
nrow(dtest)
nrow(dtrain)
ncol(dtrain)
train_control<- trainControl(method="cv", number=10)
C45Fit <- train(isVPN ~., method="J48", data=dtrain,
tuneLength = 5,
trControl = train_control)
C45Fit
C45Fit$finalModel
predictions = predict(C45Fit, newdata = dtest)
confusionMatrix(predictions, dtest$isVPN)
lab3_noVPN = read.csv("slackPcapFixGapLab3_flows.csv")
lab3_1111 = read.csv("slackPcapFixGapLab3_1111_flows.csv")
# Drop Src.ipaddr && Dest.ipaddr && start,end time && mac
drops <- c("srcIP",  "dstIP","srcMac", "dstMac", "timeFirst", "timeLast",
"srcIPCC", "dstIPCC", "srcIPOrg", "dstIPOrg", "srcMac_dstMac_numP", "dstPortClass", "srcMacLbl_dstMacLbl", "ethVlanID")
#"srcIPOrg", "dstIPOrg"
lab3_noVPN <- lab3_noVPN[, !(names(lab3_noVPN) %in% drops)]
lab3_1111 <- lab3_1111[, !(names(lab3_1111) %in% drops)]
sum(is.na(lab3_noVPN))
sum(is.na(lab3_1111))
# Add a new column, isVPN, set to 0 for no_vpn, 1 for 1111
lab3_noVPN$isVPN <- 0
lab3_1111$isVPN <- 1
# Show summary
lab3_noVPN = data.frame(lab3_noVPN)
lab3_1111 = data.frame(lab3_1111)
lab3 <- rbind(lab3_1111,lab3_noVPN)
# Remove all columns with only 1 unique value
lab3 <- lab3 %>% select(where(~ n_distinct(.) > 1))
nrow(lab3)
ncol(lab3)
predictions = predict(C45Fit, newdata = lab3)
confusionMatrix(predictions, as.factor(lab3$isVPN))
